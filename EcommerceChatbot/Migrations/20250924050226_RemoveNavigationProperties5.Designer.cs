// <auto-generated />
using System;
using EcommerceChatbot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EcommerceChatbot.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250924050226_RemoveNavigationProperties5")]
    partial class RemoveNavigationProperties5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bestellung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateBestellung")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("KundeId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Bestellungen", (string)null);
                });

            modelBuilder.Entity("DetailBestellung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BestellungId")
                        .HasColumnType("integer");

                    b.Property<int>("Menge")
                        .HasColumnType("integer");

                    b.Property<decimal>("Preis")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProduktId")
                        .HasColumnType("integer");

                    b.Property<int>("ProduktId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BestellungId");

                    b.HasIndex("ProduktId");

                    b.HasIndex("ProduktId1");

                    b.ToTable("DetailBestellungen", (string)null);
                });

            modelBuilder.Entity("EcommerceChatbot.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Zahlung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BestellungId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateZahlung")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Summe")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("BestellungId");

                    b.ToTable("Zahlungen");
                });

            modelBuilder.Entity("DetailBestellung", b =>
                {
                    b.HasOne("Bestellung", "Bestellung")
                        .WithMany("DetailBestellungen")
                        .HasForeignKey("BestellungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceChatbot.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EcommerceChatbot.Models.Product", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bestellung");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("Zahlung", b =>
                {
                    b.HasOne("Bestellung", "Bestellung")
                        .WithMany()
                        .HasForeignKey("BestellungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bestellung");
                });

            modelBuilder.Entity("Bestellung", b =>
                {
                    b.Navigation("DetailBestellungen");
                });
#pragma warning restore 612, 618
        }
    }
}
